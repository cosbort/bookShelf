"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/books/[id]/page",{

/***/ "(app-pages-browser)/./src/utils/dateFormat.ts":
/*!*********************************!*\
  !*** ./src/utils/dateFormat.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDate: function() { return /* binding */ formatDate; }\n/* harmony export */ });\n/**\n * Formatta una data nel formato dd/mm/yyyy\n * @param dateString - La data da formattare\n * @returns La data formattata o una stringa vuota se la data non è valida\n */ function formatDate(dateString) {\n    if (!dateString) return \"\";\n    try {\n        // Gestisce diversi formati di input\n        let date;\n        // Se la data è nel formato ISO (yyyy-mm-dd)\n        if (dateString.includes(\"T\")) {\n            date = new Date(dateString);\n        } else if (dateString.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            date = new Date(dateString);\n        } else {\n            date = new Date(dateString);\n        }\n        if (isNaN(date.getTime())) return \"\";\n        const day = date.getDate().toString().padStart(2, \"0\");\n        const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n        const year = date.getFullYear();\n        return \"\".concat(day, \"/\").concat(month, \"/\").concat(year);\n    } catch (e) {\n        return \"\";\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy91dGlscy9kYXRlRm9ybWF0LnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7OztDQUlDLEdBQ00sU0FBU0EsV0FBV0MsVUFBcUM7SUFDOUQsSUFBSSxDQUFDQSxZQUFZLE9BQU87SUFFeEIsSUFBSTtRQUNGLG9DQUFvQztRQUNwQyxJQUFJQztRQUVKLDRDQUE0QztRQUM1QyxJQUFJRCxXQUFXRSxRQUFRLENBQUMsTUFBTTtZQUM1QkQsT0FBTyxJQUFJRSxLQUFLSDtRQUNsQixPQUVLLElBQUlBLFdBQVdJLEtBQUssQ0FBQyx3QkFBd0I7WUFDaERILE9BQU8sSUFBSUUsS0FBS0g7UUFDbEIsT0FFSztZQUNIQyxPQUFPLElBQUlFLEtBQUtIO1FBQ2xCO1FBRUEsSUFBSUssTUFBTUosS0FBS0ssT0FBTyxLQUFLLE9BQU87UUFFbEMsTUFBTUMsTUFBTU4sS0FBS08sT0FBTyxHQUFHQyxRQUFRLEdBQUdDLFFBQVEsQ0FBQyxHQUFHO1FBQ2xELE1BQU1DLFFBQVEsQ0FBQ1YsS0FBS1csUUFBUSxLQUFLLEdBQUdILFFBQVEsR0FBR0MsUUFBUSxDQUFDLEdBQUc7UUFDM0QsTUFBTUcsT0FBT1osS0FBS2EsV0FBVztRQUU3QixPQUFPLEdBQVVILE9BQVBKLEtBQUksS0FBWU0sT0FBVEYsT0FBTSxLQUFRLE9BQUxFO0lBQzVCLEVBQUUsVUFBTTtRQUNOLE9BQU87SUFDVDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy91dGlscy9kYXRlRm9ybWF0LnRzP2NiOGMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGb3JtYXR0YSB1bmEgZGF0YSBuZWwgZm9ybWF0byBkZC9tbS95eXl5XG4gKiBAcGFyYW0gZGF0ZVN0cmluZyAtIExhIGRhdGEgZGEgZm9ybWF0dGFyZVxuICogQHJldHVybnMgTGEgZGF0YSBmb3JtYXR0YXRhIG8gdW5hIHN0cmluZ2EgdnVvdGEgc2UgbGEgZGF0YSBub24gw6ggdmFsaWRhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXREYXRlKGRhdGVTdHJpbmc6IHN0cmluZyB8IHVuZGVmaW5lZCB8IG51bGwpOiBzdHJpbmcge1xuICBpZiAoIWRhdGVTdHJpbmcpIHJldHVybiAnJztcbiAgXG4gIHRyeSB7XG4gICAgLy8gR2VzdGlzY2UgZGl2ZXJzaSBmb3JtYXRpIGRpIGlucHV0XG4gICAgbGV0IGRhdGU6IERhdGU7XG4gICAgXG4gICAgLy8gU2UgbGEgZGF0YSDDqCBuZWwgZm9ybWF0byBJU08gKHl5eXktbW0tZGQpXG4gICAgaWYgKGRhdGVTdHJpbmcuaW5jbHVkZXMoJ1QnKSkge1xuICAgICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHJpbmcpO1xuICAgIH0gXG4gICAgLy8gU2UgbGEgZGF0YSDDqCBuZWwgZm9ybWF0byB5eXl5LW1tLWRkXG4gICAgZWxzZSBpZiAoZGF0ZVN0cmluZy5tYXRjaCgvXlxcZHs0fS1cXGR7Mn0tXFxkezJ9JC8pKSB7XG4gICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZVN0cmluZyk7XG4gICAgfVxuICAgIC8vIEFsdHJpIGZvcm1hdGlcbiAgICBlbHNlIHtcbiAgICAgIGRhdGUgPSBuZXcgRGF0ZShkYXRlU3RyaW5nKTtcbiAgICB9XG5cbiAgICBpZiAoaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSByZXR1cm4gJyc7XG4gICAgXG4gICAgY29uc3QgZGF5ID0gZGF0ZS5nZXREYXRlKCkudG9TdHJpbmcoKS5wYWRTdGFydCgyLCAnMCcpO1xuICAgIGNvbnN0IG1vbnRoID0gKGRhdGUuZ2V0TW9udGgoKSArIDEpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTtcbiAgICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgIFxuICAgIHJldHVybiBgJHtkYXl9LyR7bW9udGh9LyR7eWVhcn1gO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJmb3JtYXREYXRlIiwiZGF0ZVN0cmluZyIsImRhdGUiLCJpbmNsdWRlcyIsIkRhdGUiLCJtYXRjaCIsImlzTmFOIiwiZ2V0VGltZSIsImRheSIsImdldERhdGUiLCJ0b1N0cmluZyIsInBhZFN0YXJ0IiwibW9udGgiLCJnZXRNb250aCIsInllYXIiLCJnZXRGdWxsWWVhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/dateFormat.ts\n"));

/***/ })

});